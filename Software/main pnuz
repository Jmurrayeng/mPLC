#include <Arduino.h>

// Pin definitions
const int MOTOR_A_STEP_PIN = 11;
const int MOTOR_A_DIR_PIN = 12;
const int MOTOR_B_STEP_PIN = 13;
const int MOTOR_B_DIR_PIN = 14;
const int Z_SOLENOID_PIN = 15; // Solenoid valve for pneumatic cylinder
const int SPINDLE_PIN = 16;

// Limit switch pins
const int X_LIMIT_PIN = 9;
const int Y_LIMIT_PIN = 10;

// Motion parameters
float currentX = 0.0, currentY = 0.0;  // Current position
bool zCylinderExtended = false;       // Z-axis state (true = extended, false = retracted)
float feedRate = 1000.0;              // Default feed rate in mm/min
bool isHomed = false;                 // Homing state

// Stop motion if limit switch is triggered
void checkLimitSwitches() {
  if (digitalRead(X_LIMIT_PIN) == LOW || digitalRead(Y_LIMIT_PIN) == LOW) {
    Serial.println("Limit switch triggered! Stopping motion.");
    while (true) {
      delay(100);  // Halt indefinitely (or implement a reset mechanism)
    }
  }
}

// Simplified moveHBot function (no acceleration control)
void moveHBot(float deltaX, float deltaY) {
  Serial.println("Moving...");

  checkLimitSwitches();

  int stepsA = deltaX + deltaY;
  int stepsB = deltaX - deltaY;

  bool dirA = (stepsA >= 0);
  bool dirB = (stepsB >= 0);

  digitalWrite(MOTOR_A_DIR_PIN, dirA ? HIGH : LOW);
  digitalWrite(MOTOR_B_DIR_PIN, dirB ? HIGH : LOW);

  stepsA = abs(stepsA);
  stepsB = abs(stepsB);

  int maxSteps = max(stepsA, stepsB);

  // Calculate time per step based on feed rate (in mm/min)
  float targetSpeed = feedRate / 60.0;  // Convert mm/min to mm/s
  float stepDistance = 1.0 / maxSteps; // Distance per step
  float timePerStep = stepDistance / targetSpeed; // Time per